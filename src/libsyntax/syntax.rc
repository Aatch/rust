#[link(name = "syntax",
       vers = "0.3",
       uuid = "9311401b-d6ea-4cd9-a1d9-61f89499c645")];



#[crate_type = "lib"];

#[no_core];

#[allow(vecs_implicitly_copyable)];

use core(vers = "0.3");
use std(vers = "0.3");

import core::*;

module attr;
module diagnostic;
module codemap;
module ast;
module ast_util;
module ast_map;
module visit;
module fold;
module util {
    module interner;
}

module parse {
    export parser;
    export common;
    export lexer;
    export token;
    export comments;
    export prec;
    export classify;
    export attr;

    module eval;
    module lexer;
    module parser;
    module token;
    module comments;
    module attr;

    /// Common routines shared by parser mods
    module common;

    /// Functions dealing with operator precedence
    module prec;

    /// Routines the parser uses to classify AST nodes
    module classify;
}

module print {
    module pp;
    module pprust;
}

module ext {
    module base;
    module expand;
    module qquote;
    module build;

    module tt {
        module transcribe;
        module earley_parser;
        module macro_rules;
    }


    module simplext;
    module fmt;
    module env;
    module concat_idents;
    module ident_to_str;
    module log_syntax;
    module auto_serialize;
    module source_util;

    module pipes {
        module ast_builder;
        module parse_proto;
        module pipec;
        module proto;
        module check;
        module liveness;
    }
}
