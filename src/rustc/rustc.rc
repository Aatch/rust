// -*- rust -*-

#[link(name = "rustc",
       vers = "0.3",
       uuid = "0ce89b41-2f92-459e-bbc1-8f5fe32f16cf",
       url = "https://github.com/mozilla/rust/tree/master/src/rustc")];

#[comment = "The Rust compiler"];
#[license = "MIT"];
#[crate_type = "lib"];

#[no_core];

#[allow(vecs_implicitly_copyable)];

use core(vers = "0.3");
use std(vers = "0.3");
use syntax(vers = "0.3");

import core::*;

/*
Alternate names for some modules.

I am using this to help extract metadata into its own crate. In metadata.rs
it redefines all these modules in order to gate access from metadata to the
rest of the compiler, then uses these to access the original implementation.
*/
import util_ = util;
import lib_ = lib;
import driver_ = driver;
import middle_ = middle;
import back_ = back;

module middle {
    module trans {
        module common;
        module consts;
        module type_of;
        module build;
        module base;
        module alt;
        module uniq;
        module closure;
        module tvec;
        module impl;
        module foreign;
        module reflect;
        module shape;
        module debuginfo;
        module type_use;
        module reachable;
    }
    module ty;
    module resolve3;
    module typeck {
        module check {
            module alt;
            module vtable;
            module writeback;
            module regionmanip;
            module regionck;
            module demand;
            module method;
        }
        module rscope;
        module astconv;
        module infer;
        module collect;
        module coherence;
    }
    module check_loop;
    module check_alt;
    module check_const;
    module lint;
    module borrowck {
        module check_loans;
        module gather_loans;
        module categorization;
        module loan;
        module preserve;
    }
    module liveness;
    module block_use;
    module kind;
    module freevars;
    module capture;
    module pat_util;
    module region;
    module const_eval;
    module astencode;
    module lang_items;
}

module front {
    module config;
    module test;
    module core_inject;
    module intrinsic_inject;
}

module back {
    module link;
    module abi;
    module upcall;
    module x86;
    module x86_64;
    module rpath;
    module target_strs;
}

module metadata {
    export encoder;
    export creader;
    export cstore;
    export csearch;
    export common;
    export decoder;
    export tyencode;
    export tydecode;
    export loader;
    export filesearch;

    module common;
    module tyencode;
    module tydecode;
    module encoder;
    module decoder;
    module creader;
    module cstore;
    module csearch;
    module loader;
    module filesearch;
}

module driver {
    module driver;
    module session;
}

module util {
    module common;
    module ppaux;
}

module lib {
    module llvm;
}

// Local Variables:
// fill-column: 78;
// indent-tabs-mode: nil
// c-basic-offset: 4
// buffer-file-coding-system: utf-8-unix
// End:
